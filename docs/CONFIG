## Configuration ##

There are three sorts of configuration for Tiro:
 - global configuration,
 - assignment configuration, and
 - user configuration.

Global configurations are stored in tiro/system/config.cfg.  (This is
determined by the CONFIG_FILE constant in tiro.cgi and can be changed
if you wish.)

Assignment configurations are files stored in the tiro/assignments/
directory.  Each file in the tiro/assignments/ folder represents a
single assignment and contains the configuration for that assignment.

User configurations are stored in the CSV (comma-separated value) file
specified by the 'users_file' setting in the global configuration.
Additional users can also be specified directly in the global
configuration.

## Configuration File Format ##

Both the global configuration file and the assignment configuration
files use the same format.  A configuration file start with a header
made up of multiple header lines.  The header ends at the first blank
line.  (Any line with only white space counts as a blank line.)
Everything after the header counts as the body.  The body is
unstructured HTML.

Header lines consist of a key and a value separated by the first colon
(':') on the line.  White space at the start and end of the key and
value is ignored.  The same key may be duplicated multiple times.  For
keys representing scalar properties, only the last value has effect.
But for keys representing list properties, each value becomes a
separate element of the list.

Header lines that don't contain colons are ignored.

### Comments ###

Technically there is no comment syntax for header lines but a hash
('#') at the start of a line is effectively a comment.  If the line
doesn't contain a colon then the line is ignored regarless of the
hash.  Since none of the standard keys start with a hash, if the line
does contain a colon, the line will also be ignored.


## Global Configuration ##

By default the global configuration is stored in
tiro/system/config.cfg, but this can be overridden by setting
CONFIG_FILE in tiro/tiro.cgi.

The following are the settings that can be set
in the global configuration.  Usually you will only need to set
'title', 'admins' and the body text.

'users_file', 'user_id_column', 'user_full_name_column', 'user_expires_column'
'users_header_lines'.


title (required): The title that should be displayed at the top of all pages.

working_dir (defaults to "."):
  the working directory from which tiro.cgi should

path (defaults to "/usr/local/bin:/usr/bin:/bin"): 
  The PATH that sub-programs (e.g. validators and sanity_tests)
  should have in their environment when they are running.

max_post_size (defaults to "1000000"):
  The total number of bytes allowed durring upload.

date_format (defaults to "%a, %b %d %Y, %r"):
  How to display the date in the user interface.  This is used for display
  purposes only and has no symantic meaning.  Uses '%' escapes
  from the UnixDate function in Date::Manip.

log_file (defaults to "system/log/log-%Y-%m-%d.txt"):
  

assignments_dir (defaults to "assignments"):
  The path to the directory containing assignment configuration files.
  This path is relative to the working_dir.

assignments_regex (defaults to "^(\w+)\.cfg$"):
  A Perl regular expression.  Only files in the assignments_dir
  directory that match this regular expression are treated as
  assignment configurations.  The part of the filename that matches
  the first capture buffer is treated as the assignment id.

submissions_dir (defaults to "submissions"):
  The path to the directory containing submissions.  This path is
  relative to the working_dir.

admins (list, defaults to the empty list):

  The users that are application administrators.  They can see uploads
  by other users.  As this is a list, one administrator is written per
  line.

user_override (defaults to the empty string):

  This is an override for the user login and will be used as the login id
  instead of the HTTPS user login.  Primarily useful for demo purposes
  or a public site that shouldn't require login.

users (list, defaults to the empty list):

  
  Maps each usernames (as a string) to
   a dictionary that represents the configuration settings for that user.
   That dictionary contains the following keys mapping to the described values.
   - full_name: (String) The full name of the user.
     Only used for display purposes.
   - expires: (String) The date afterwhich this user should no longer be
     allowed access.  Any date format parsable by Date::Manip is allowed.
users_file (defaults to the empty string):
user_name_column (defaults to the empty string):
user_full_name_column (defaults to the empty string):
user_expires_column (defaults to the empty string):
users_header_lines (defaults to "0"):

text (defaults to the empty string)
misc

## Assignment Configuration ##

The identifier for the folder configuration is taken from the file name
of the folder configuration file.

By default assignments are stored in the assignments/ folder, but this
can be overridden by setting assignments_dir in the global
configuration file.

  assignments_dir => 'assignments',
  assignments_regex => qr[^(\w+)\.cfg$],



title (required): The assignment title
- title: (String) The friendly name for the folder.  Only used for display purposes.

hidden_until (defaults to the empty string):
due (defaults to the empty string):
- due: (String) The date that the folder is due.  Any date format parsabel by Date::Manip is allowed.
file_count (defaults to the empty string):
- file_count: (Number) The number of file uploads to allow.
validators (list, defaults to the empty list):
- validators: (Array) A list of checkers to run on submissions for this folder.
    Each element of the array is itself a two element array.
    - The first element is a string indicating the name of the checker.
      The first element only used for display purposes.
    - The second element is the program to run for the checker and
      is represented as an array of strings.
      The first string is the program the other strings are the arguments
      to the program.  The directory containing a particular submission
      is passed as a final argument after the arguments specified in this array.
- sanity tests: TODO

text_file (defaults to the empty string):

text (defaults to the empty string):
HTML code that is inserted after the title and before the upload form.  The HTML code is placed in a <div> and is usually a description of the folder or any special instructions the user should now before uploading.
misc

## User Configuration ##

Users are defined either in the global configuration file or the user
configuration file.

Whether defined in the global or the user configuration file, each
user has certain properties.

id:
  the user name of the user, this must match the 
full_name:
  the 


for each user
each user

Users can be defined either as part of the global configuration or in
the user configuration file.  

Each user has four properties
id, full name, expiration date, is admin

A user
